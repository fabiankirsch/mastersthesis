# %load_ext autoreload
# %autoreload 2
import sys
import numpy as np
import pandas as pd
from filters import medfilt_3d_array,separate_acc_to_body_gravity

def test_separate_acc_to_body_gravity():
    X = np.array([[[0.9180555898766518, -0.1124999994242935, 0.5097222514293852],
            [0.9111111304603812, -0.09305556168259389, 0.5375000404706096],
            [0.8819444981597608, -0.0861111144222878, 0.5138889270791476],
            [0.8819444981597608, -0.0861111144222878, 0.5138889270791476],
            [0.8791667143932526, -0.1000000028649177, 0.5055555757796229],
            [0.8791667143932526, -0.1000000028649177, 0.5055555757796229],
            [0.8888889575760315, -0.105555564319952, 0.5125000351958935],
            [0.8625000117942031, -0.1013888947481719, 0.5097222514293852],
            [0.8611111199109489, -0.1041666724366978, 0.5013889001298605],
            [0.8611111199109489, -0.1041666724366978, 0.5013889001298605],
            [0.8611111199109489, -0.1041666724366978, 0.5013889001298605],
            [0.8541666604946784, -0.1083333359304957, 0.5277777972878307],
            [0.8513888767281701, -0.1013888947481719, 0.5527778025625468]],

           [[0.8583333361444407, -0.1083333359304957, 0.5624999971214676],
            [0.8541666604946784, -0.1152777831908018, 0.5486111269127845],
            [0.8513888767281701, -0.1097222278137498, 0.5500000187960387],
            [0.8513888767281701, -0.1097222278137498, 0.5500000187960387],
            [0.8708333630937278, -0.08750000022755966, 0.5680555646544842],
            [0.8583333361444407, -0.0791666671619817, 0.5708333484209924],
            [0.8319444876103286, -0.08472222253903368, 0.5597222619788175],
            [0.8208333525442956, -0.1041666724366978, 0.5263889054045766],
            [0.8125000498686289, -0.1097222278137498, 0.5375000404706096],
            [0.8125000498686289, -0.1097222278137498, 0.5375000404706096],
            [0.8125000498686289, -0.1097222278137498, 0.5375000404706096],
            [0.8125000498686289, -0.1013888947481719, 0.577777807837263],
            [0.8291667038438203, -0.1111111196970039, 0.5847222672535336]],

           [[0.8430556226763616, -0.1069444440472416, 0.5861111105129296],
            [0.8347222713768369, -0.1013888947481719, 0.5624999971214676],
            [0.8305555957270745, -0.1041666724366978, 0.554166694445801],
            [0.8305555957270745, -0.1041666724366978, 0.554166694445801],
            [0.8305555957270745, -0.1041666724366978, 0.554166694445801],
            [0.8305555957270745, -0.1041666724366978, 0.554166694445801],
            [0.8305555957270745, -0.1041666724366978, 0.554166694445801],
            [0.8277778119605662, -0.1041666724366978, 0.5708333484209924],
            [0.8333333794935827, -0.1111111196970039, 0.5750000240707548],
            [0.8319444876103286, -0.1013888947481719, 0.5624999971214676],
            [0.8333333794935827, -0.1013888947481719, 0.5583333700955634],
            [0.8305555957270745, -0.1138888913075477, 0.5583333700955634],
            [0.8250000281940579, -0.1111111196970039, 0.5694444565377382]]])

    X_expected = np.array([[[ 9.18056e-01,  9.37600e-03,  3.38500e-02, -1.21876e-01,
          4.75872e-01],
        [ 9.11111e-01,  2.88120e-02,  6.15900e-02, -1.21867e-01,
          4.75910e-01],
        [ 8.81944e-01,  3.57480e-02,  3.79440e-02, -1.21859e-01,
          4.75945e-01],
        [ 8.81944e-01,  3.57410e-02,  3.79120e-02, -1.21852e-01,
          4.75976e-01],
        [ 8.79167e-01,  2.18450e-02,  2.95510e-02, -1.21845e-01,
          4.76005e-01],
        [ 8.79167e-01,  2.18390e-02,  2.95250e-02, -1.21839e-01,
          4.76030e-01],
        [ 8.88889e-01,  1.62790e-02,  3.64470e-02, -1.21834e-01,
          4.76053e-01],
        [ 8.62500e-01,  2.04410e-02,  3.36500e-02, -1.21830e-01,
          4.76072e-01],
        [ 8.61111e-01,  1.76590e-02,  2.52990e-02, -1.21825e-01,
          4.76090e-01],
        [ 8.61111e-01,  1.76550e-02,  2.52840e-02, -1.21822e-01,
          4.76104e-01],
        [ 8.61111e-01,  1.76520e-02,  2.52720e-02, -1.21819e-01,
          4.76117e-01],
        [ 8.54167e-01,  1.34830e-02,  5.16500e-02, -1.21817e-01,
          4.76128e-01],
        [ 8.51389e-01,  2.04260e-02,  7.66420e-02, -1.21814e-01,
          4.76136e-01]],

       [[ 8.58333e-01, -1.76800e-03,  1.66840e-02, -1.06565e-01,
          5.45816e-01],
        [ 8.54167e-01, -8.71000e-03,  2.77400e-03, -1.06568e-01,
          5.45837e-01],
        [ 8.51389e-01, -3.15100e-03,  4.14300e-03, -1.06571e-01,
          5.45857e-01],
        [ 8.51389e-01, -3.14800e-03,  4.12600e-03, -1.06574e-01,
          5.45874e-01],
        [ 8.70833e-01,  1.90760e-02,  2.21660e-02, -1.06576e-01,
          5.45890e-01],
        [ 8.58333e-01,  2.74110e-02,  2.49290e-02, -1.06578e-01,
          5.45904e-01],
        [ 8.31944e-01,  2.18580e-02,  1.38060e-02, -1.06580e-01,
          5.45916e-01],
        [ 8.20833e-01,  2.41500e-03, -1.95380e-02, -1.06581e-01,
          5.45927e-01],
        [ 8.12500e-01, -3.13900e-03, -8.43600e-03, -1.06583e-01,
          5.45937e-01],
        [ 8.12500e-01, -3.13800e-03, -8.44500e-03, -1.06584e-01,
          5.45945e-01],
        [ 8.12500e-01, -3.13700e-03, -8.45100e-03, -1.06585e-01,
          5.45951e-01],
        [ 8.12500e-01,  5.19700e-03,  3.18210e-02, -1.06586e-01,
          5.45957e-01],
        [ 8.29167e-01, -4.52500e-03,  3.87600e-02, -1.06587e-01,
          5.45962e-01]],

       [[ 8.43056e-01, -3.20300e-03, -1.47430e-02, -1.03742e-01,
          6.00854e-01],
        [ 8.34722e-01,  2.35700e-03, -3.83420e-02, -1.03745e-01,
          6.00842e-01],
        [ 8.30556e-01, -4.18000e-04, -4.66650e-02, -1.03749e-01,
          6.00831e-01],
        [ 8.30556e-01, -4.15000e-04, -4.66550e-02, -1.03752e-01,
          6.00822e-01],
        [ 8.30556e-01, -4.12000e-04, -4.66460e-02, -1.03755e-01,
          6.00813e-01],
        [ 8.30556e-01, -4.09000e-04, -4.66380e-02, -1.03757e-01,
          6.00805e-01],
        [ 8.30556e-01, -4.07000e-04, -4.66310e-02, -1.03760e-01,
          6.00797e-01],
        [ 8.27778e-01, -4.05000e-04, -2.99580e-02, -1.03762e-01,
          6.00791e-01],
        [ 8.33333e-01, -7.34800e-03, -2.57850e-02, -1.03763e-01,
          6.00785e-01],
        [ 8.31944e-01,  2.37600e-03, -3.82810e-02, -1.03765e-01,
          6.00781e-01],
        [ 8.33333e-01,  2.37700e-03, -4.24430e-02, -1.03766e-01,
          6.00777e-01],
        [ 8.30556e-01, -1.01220e-02, -4.24400e-02, -1.03767e-01,
          6.00773e-01],
        [ 8.25000e-01, -7.34300e-03, -3.13260e-02, -1.03768e-01,
          6.00770e-01]]])

    X_out = separate_acc_to_body_gravity(X,[1,2], sample_rate=50)
    assert((np.round(X_out, 6) == X_expected).all())


def test_medfilt_3d_array():
    X =   [[[0.9180555898766518, -0.1124999994242935, 0.5097222514293852],
            [0.9111111304603812, -0.09305556168259389, 0.5375000404706096],
            [0.8819444981597608, -0.0861111144222878, 0.5138889270791476],
            [0.8819444981597608, -0.0861111144222878, 0.5138889270791476],
            [0.8791667143932526, -0.1000000028649177, 0.5055555757796229],
            [0.8888889575760315, -0.105555564319952, 0.5125000351958935],
            [0.8625000117942031, -0.1013888947481719, 0.5097222514293852],
            [0.8611111199109489, -0.1041666724366978, 0.5013889001298605],
            [0.8541666604946784, -0.1083333359304957, 0.5277777972878307],
            [0.8513888767281701, -0.1013888947481719, 0.5527778025625468]],

           [[0.8583333361444407, -0.1083333359304957, 0.5624999971214676],
            [0.8541666604946784, -0.1152777831908018, 0.5486111269127845],
            [0.8513888767281701, -0.1097222278137498, 0.5500000187960387],
            [0.8708333630937278, -0.08750000022755966, 0.5680555646544842],
            [0.8583333361444407, -0.0791666671619817, 0.5708333484209924],
            [0.8319444876103286, -0.08472222253903368, 0.5597222619788175],
            [0.8208333525442956, -0.1041666724366978, 0.5263889054045766],
            [0.8125000498686289, -0.1097222278137498, 0.5375000404706096],
            [0.8125000498686289, -0.1013888947481719, 0.577777807837263],
            [0.8291667038438203, -0.1111111196970039, 0.5847222672535336]],

           [[0.8430556226763616, -0.1069444440472416, 0.5861111105129296],
            [0.8347222713768369, -0.1013888947481719, 0.5624999971214676],
            [0.8305555957270745, -0.1041666724366978, 0.554166694445801],
            [0.8305555957270745, -0.1041666724366978, 0.554166694445801],
            [0.8277778119605662, -0.1041666724366978, 0.5708333484209924],
            [0.8333333794935827, -0.1111111196970039, 0.5750000240707548],
            [0.8319444876103286, -0.1013888947481719, 0.5624999971214676],
            [0.8333333794935827, -0.1013888947481719, 0.5583333700955634],
            [0.8305555957270745, -0.1138888913075477, 0.5583333700955634],
            [0.8250000281940579, -0.1111111196970039, 0.5694444565377382]]]
    X_filtered = medfilt_3d_array(X, kernel_size=3)

    X_expected = [[[ 0.911111, -0.093056,  0.509722],
        [ 0.911111, -0.093056,  0.513889],
        [ 0.881944, -0.086111,  0.513889],
        [ 0.881944, -0.086111,  0.513889],
        [ 0.881944, -0.1     ,  0.5125  ],
        [ 0.879167, -0.101389,  0.509722],
        [ 0.8625  , -0.104167,  0.509722],
        [ 0.861111, -0.104167,  0.509722],
        [ 0.854167, -0.104167,  0.527778],
        [ 0.851389, -0.101389,  0.527778]],

       [[ 0.854167, -0.108333,  0.548611],
        [ 0.854167, -0.109722,  0.55    ],
        [ 0.854167, -0.109722,  0.55    ],
        [ 0.858333, -0.0875  ,  0.568056],
        [ 0.858333, -0.084722,  0.568056],
        [ 0.831944, -0.084722,  0.559722],
        [ 0.820833, -0.104167,  0.5375  ],
        [ 0.8125  , -0.104167,  0.5375  ],
        [ 0.8125  , -0.109722,  0.577778],
        [ 0.8125  , -0.101389,  0.577778]],

       [[ 0.834722, -0.101389,  0.5625  ],
        [ 0.834722, -0.104167,  0.5625  ],
        [ 0.830556, -0.104167,  0.554167],
        [ 0.830556, -0.104167,  0.554167],
        [ 0.830556, -0.104167,  0.570833],
        [ 0.831944, -0.104167,  0.570833],
        [ 0.833333, -0.101389,  0.5625  ],
        [ 0.831944, -0.101389,  0.558333],
        [ 0.830556, -0.111111,  0.558333],
        [ 0.825   , -0.111111,  0.558333]]]

    assert((X_expected == np.round(X_filtered, 6)).all())
